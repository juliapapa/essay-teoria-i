### ESTUDO DO FRAGILE STATE INDEX

library(readxl)
FSindex <- read_excel('index_bom.xlsx')
View(FSindex)

library(tidyverse)

FSindex <- index_bom

dudu <- lm(state_legitimacy ~ security , data = FSindex)
print(dudu)
summary(dudu)

cor(FSindex$state_legitimacy, FSindex$security)

superregressao <- lm(state_legitimacy ~ security + elites + econ_nequality 
                     + human_rights, data = FSindex)

summary(superregressao)

teste = lm(formula = state_legitimacy ~ security*elites*econ_nequality*
                human_rights, data = FSindex)
View(teste)

plot(teste)

## Relacionando State Legitimacy, Fractionalized Elites e Security

state_elite <- lm(state_legitimacy ~ elites, data = FSindex)
cor(FSindex$state_legitimacy, FSindex$elites)

elitestate <- ggplot(data = FSindex, aes(x= elites, y = state_legitimacy)) + 
    geom_point(aes(size = security)) +
    geom_smooth(method='lm', se = FALSE) + 
    labs(title="Factionalized Elites Vs State Legitimacy",
         y="State Legitimacy", x='Factionalized Elites', caption="Source: Fragile States Index")
elitestate
   
ggplot() +
    geom_point(data = FSindex,aes(x= elites, y = state_legitimacy, color = security)) +
    geom_smooth(method='lm', se=FALSE) + 
    labs(title="Factionalized Elites Vs State Legitimacy",
         y="State Legitimacy", x='Factionalized Elites', caption="Source: Fragile States Index")
                                  
## RELACIONANDO ELITES, ESTADO E SEGURANCA

## Fazer um mapa de calor

library(reshape2)
library(readxl)
dadosmapadecalor <- read_excel("dadosmapadecalor.xlsx")
View(dadosmapadecalor)

#paises escolhidos -> iemen, rdc, rca, libia,
# ruanda, africa do sul
mapa <- maparename[, c(1,2,3,4,5)] 
head(mapa)

## correlation matrix 

cormat <- round(cor(mapa), 2)
head(cormat)

## correlation heatmap

melted_cormat <- melt(cormat)
head(melted_cormat)

ggplot(data = melted_cormat, aes(x = Var1, y = Var2,
                                 fill = value)) +
    geom_tile()

## lower and upper triangle of the correlation matrix

get_lower_tri<-function(cormat){
    cormat[upper.tri(cormat)] <- NA
    return(cormat)
}

get_upper_tri <- function(cormat){
    cormat[lower.tri(cormat)]<- NA
    return(cormat)
}

## Finishing the heatmap
melted_cormat <- melt(upper_tri, na.rm = TRUE)

ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
    geom_tile(color = "white")+
    scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                         midpoint = 0, limit = c(-1,1), space = "Lab", 
                         name="Pearson\nCorrelation") +
    theme_minimal()+ 
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 12, hjust = 1))+
    coord_fixed()

## Reordering the matrix

reorder_cormat <- function(cormat){
    # Use correlation between variables as distance
    dd <- as.dist((1-cormat)/2)
    hc <- hclust(dd)
    cormat <-cormat[hc$order, hc$order]
}

# Reorder the correlation matrix
cormat <- reorder_cormat(cormat)
upper_tri <- get_upper_tri(cormat)
# Melt the correlation matrix
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Create a ggheatmap
ggheatmap <- ggplot(melted_cormat, aes(Var2, Var1, fill = value))+
    geom_tile(color = "white")+
    scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                         midpoint = 0, limit = c(-1,1), space = "Lab", 
                         name="Pearson\nCorrelation") +
    theme_minimal()+ # minimal theme
    theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                     size = 12, hjust = 1))+
    coord_fixed()
# Print the heatmap
print(ggheatmap)

ggheatmap + 
    geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
    theme(
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.ticks = element_blank(),
        legend.direction = "horizontal")
+ 
    guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
                                 title.position = "top", title.hjust = 0.5))
    
#### TABELA DE REGRESSÃ•ES
install.packages('stargazer')
library(stargazer)

stargazer(superregressao,
          type="html",
          out="star_linear.doc")

stargazer(teste,
          type = 'html',
          out = 'star_linear.doc')
         
 ## FIM
